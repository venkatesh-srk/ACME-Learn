[{"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/index.js":"1","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/App.js":"2","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/serviceWorker.js":"3","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/app/store.js":"4","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Pages/home-page.js":"5","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/features/counter/counterSlice.js":"6","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/header.js":"7","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/collaboration-banner.js":"8","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/chat-helper.js":"9","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/course-card.js":"10","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/speciality-card.js":"11","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/utilities.js":"12","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/news-letter-banner.js":"13","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/Footer.js":"14"},{"size":760,"mtime":1611506900530,"results":"15","hashOfConfig":"16"},{"size":436,"mtime":1611481743343,"results":"17","hashOfConfig":"16"},{"size":5141,"mtime":1611291801536,"results":"18","hashOfConfig":"16"},{"size":206,"mtime":1611291801532,"results":"19","hashOfConfig":"16"},{"size":4078,"mtime":1611501154041,"results":"20","hashOfConfig":"16"},{"size":1551,"mtime":1611291801534,"results":"21","hashOfConfig":"16"},{"size":1153,"mtime":1611500659965,"results":"22","hashOfConfig":"16"},{"size":1095,"mtime":1611481875291,"results":"23","hashOfConfig":"16"},{"size":2777,"mtime":1611499695649,"results":"24","hashOfConfig":"16"},{"size":3558,"mtime":1611486305978,"results":"25","hashOfConfig":"16"},{"size":1275,"mtime":1611484242912,"results":"26","hashOfConfig":"16"},{"size":546,"mtime":1611485763451,"results":"27","hashOfConfig":"16"},{"size":854,"mtime":1611487438743,"results":"28","hashOfConfig":"16"},{"size":1111,"mtime":1611488359781,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1pzxjtc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/index.js",[],["62","63"],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/App.js",[],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/serviceWorker.js",[],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/app/store.js",[],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Pages/home-page.js",[],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/features/counter/counterSlice.js",[],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/header.js",[],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/collaboration-banner.js",[],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/chat-helper.js",[],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/course-card.js",["64","65","66"],"import React from \"react\";\nimport {Card, Container, Row, Col, Button, Image } from \"react-bootstrap\";\n\nimport { SVGStar } from './utilities';\n\nconst Courses = [{\n    title: \"Neuroscience and Neuroimaging\",\n    subTitle: \"Harvard Medical School\",\n    image: './images/acme_courses_1.png',\n    rating: 4.8,\n    reviews: 4878,\n    tag: {\n        title: 'Most Expected',\n        category: 1\n    },\n    startDate: '01/01/2021',\n    enrolledUsers: 358,\n    description: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n}, {\n    title: \"Advance Neurology\",\n    subTitle: \"Stanford University of California\",\n    image: './images/acme_courses_2.png',\n    rating: 4.6,\n    reviews: 3578,\n    tag: {\n        title: 'Trending',\n        category: 1\n    },\n    startDate: '06/01/2021',\n    enrolledUsers: 287,\n    description: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n}, {\n    title: \"Respiratory Therapy\",\n    subTitle: \"Harvard Medical School\",\n    image: './images/acme_courses_3.png',\n    rating: 4.4,\n    reviews: 3654,\n    tag: {\n        title: 'Popular',\n        category: 2\n    },\n    startDate: '12/01/2021',\n    enrolledUsers: 234,\n    description: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n}]\n\n\nfunction CourseRatingAndReviews (props) {\n    const { rating , reviews } = props.course;\n    let starsArr = [1,2,3,4,5];\n    const StarsIcons = starsArr.map(key => {\n        return <SVGStar key={key} isActive={(rating >= key)}/>\n    });\n\n    return (\n        <p className=\"starRating\">\n            {StarsIcons}\n            <span className=\"ml-2\"><b>{rating}</b></span>\n            <span className=\"ml-2\">({reviews} Reviews)</span>\n        </p>\n    )\n\n}\n\nfunction CourseCard (props) {\n    const course = props.course;\n\n    const featuredTag = (\n        <div>\n            <p>Featured</p>\n        </div>\n    )\n\n    return (\n        <Card className=\"course-card\">\n            <Card.Body>\n                <Card.Img className=\"card-image\" src={course.image} />\n                <Card.Subtitle className=\"mb-2 text-muted\">{course.subTitle}</Card.Subtitle>\n                <Card.Title>{course.title}</Card.Title>\n                <CourseRatingAndReviews course={course} />\n                <div className='course-detail-div'>\n                    <p className=\"course-duration-head\">\n                        <Image src=\"./images/icon-calender.svg\" height=\"12px\" />Course Starting on,</p>\n                    <p className=\"course-duration-text\">{course.startDate}</p>\n                </div>\n                <div className='course-detail-div'>\n                    <p className=\"course-duration-head\">\n                        <Image src=\"./images/icon-calender.svg\" height=\"12px\" />Enrolled Users</p>\n                    <p className=\"course-duration-text\">{course.enrolledUsers}</p>\n                </div>\n                <Button variant=\"outline-primary\" block>View course details</Button>\n            </Card.Body>\n        </Card>\n    )\n}\n\nfunction WrappedCourseCard (props) {\n    const limit = props.limit || 3;\n\n    const cards = Courses.map((course, key) => {\n        if(key < limit) {\n            return (\n                <Col xs={12} sm={4} key={key}>\n                    <CourseCard key={key} course={course}/>\n                </Col>\n            )\n        }\n    })\n\n    return (\n        <Row className=\"course-cards\">\n            {cards}\n        </Row>\n    )\n}\n\nexport {CourseCard as default, WrappedCourseCard };","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/speciality-card.js",["67","68"],"import React from \"react\";\nimport {Row, Col, Card, Container} from \"react-bootstrap\";\n\n\nconst specialities = [{\n    title: 'Neurology',\n    image: './images/icon-brain.svg'\n}, {\n    title: 'Cardiolody',\n    image: './images/icon-medical_heart.svg'\n}, {\n    title: 'Respiratory',\n    image: './images/icon-lungs.svg'\n}, {\n    title: 'Gastroenterology',\n    image: './images/icon-stomach.svg'\n}];\n\nfunction SpecialityCard (props) {\n    const speciality = props.speciality;\n    return (\n        <Card className=\"speciality-card\">\n            <Card.Img className=\"card-img\" src={ speciality.image } />\n            <Card.Body>\n                <Card.Title className=\"card-title\">{speciality.title}</Card.Title>\n            </Card.Body>\n        </Card>\n    )\n}\n\nfunction WrappedSpecialityCards (props) {\n    const limit = props.limit || 3;\n\n    const cards = specialities.map((speciality, key) => {\n        if(key < limit) {\n            return (\n                <Col xs={12} sm={3} key={key}>\n                    <SpecialityCard speciality={ speciality } key={key}/>\n                </Col>\n            )\n        }\n    })\n    return (\n        <Row className=\"speciality-cards\">\n            {cards}\n        </Row>\n    )\n}\n\nexport { SpecialityCard as default, WrappedSpecialityCards };","/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/utilities.js",[],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/news-letter-banner.js",[],"/Users/Venkatesh/Teezle/Venkat WorkSpace/My Space/Work Space/Code-Bucket/ACME-Learn/src/Components/Footer.js",["69"],"import React from \"react\";\nimport {Nav, Row, Col, Button,} from \"react-bootstrap\";\n\nfunction Footer() {\n    return (\n        <Row>\n            <Col sm={4}>\n                <Nav className=\"flex-column\">\n                    <Nav.Link>Home</Nav.Link>\n                    <Nav.Link>About Us</Nav.Link>\n                    <Nav.Link>Specialities</Nav.Link>\n                    <Nav.Link>Courses</Nav.Link>\n                </Nav>\n            </Col>\n            <Col sm={4}>\n                <Nav className=\"flex-column\">\n                    <Nav.Link>News</Nav.Link>\n                    <Nav.Link>Events</Nav.Link>\n                    <Nav.Link>Privacy Policy</Nav.Link>\n                    <Nav.Link>Terms of Use</Nav.Link>\n                </Nav>\n            </Col>\n            <Col sm={4}>\n                <Nav className=\"flex-column\">\n                    <Nav.Link>Press</Nav.Link>\n                    <Nav.Link>Blog</Nav.Link>\n                    <Nav.Link>Facebook</Nav.Link>\n                    <Nav.Link>Twitter</Nav.Link>\n                </Nav>\n            </Col>\n        </Row>\n    )\n}\n\nexport default Footer;",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":15,"nodeType":"76","messageId":"77","endLine":2,"endColumn":24},{"ruleId":"74","severity":1,"message":"78","line":68,"column":11,"nodeType":"76","messageId":"77","endLine":68,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":100,"column":45,"nodeType":"81","messageId":"82","endLine":100,"endColumn":47},{"ruleId":"74","severity":1,"message":"75","line":2,"column":25,"nodeType":"76","messageId":"77","endLine":2,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":34,"column":54,"nodeType":"81","messageId":"82","endLine":34,"endColumn":56},{"ruleId":"74","severity":1,"message":"83","line":2,"column":24,"nodeType":"76","messageId":"77","endLine":2,"endColumn":30},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'featuredTag' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]